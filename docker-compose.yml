---
version: '2'
services:
  app-source:
    # Using both "build" and "image" directives causes docker-compose
    # to generate a single image that gets reused between services,
    # dramatically reducing runtime of `docker-compose build [--no-cache]`.
    build: .
    image: securedrop-development
    ports:
      - "8080:8080"
    volumes:
      - ./securedrop:/securedrop
      - securedropdata:/var/lib/securedrop
    working_dir: /securedrop
    command: python source.py

  app-journalist:
    build: .
    image: securedrop-development
    ports:
      - "8081:8081"
    volumes:
      - ./securedrop:/securedrop
      - securedropdata:/var/lib/securedrop
    working_dir: /securedrop
    command: python journalist.py
    links:
      - redis:redis

  redis:
    image: redis
    ports:
      - "6379:6379"

  app-test:
    build: .
    image: securedrop-development
    volumes:
      - ./securedrop:/securedrop
      # Don't mount volume
      # - securedropdata:/var/lib/securedrop
      # Need more entropy in container for crypto calls
      - /dev/urandom:/dev/random
      - securedropdatatesttmp:/tmp
    # Omit "command" since we just want the container present in order to run
    # tests. Bringing the containers up shouldn't trigger a test run.
    environment:
      SECUREDROP_ENV: test
      SECUREDROP_REDIS_SERVER: redis
      #    PYTEST_DEBUG: 1
    links:
      - redis:redis

volumes:
  # Create a common volume for mounting in both app containers,
  # so the same database file is used for Source and Journalist.
  securedropdata: {}
